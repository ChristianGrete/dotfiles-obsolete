#!/bin/sh

if [ "$(basename "$0")" != sh ]
  then
    echo "$(cat <<EOF
Please avoid trying to directly invoke this binary as it is intended to be
executed as a download task from a remote location. If you are trying to
download dotfiles, try again using \`curl -fLSs https://git.io/viFK3 | sh\`.
EOF)" >&2

    exit 1
fi

prompt () {
  printf "$(read answer </dev/tty && printf "$answer")"
}

confirm () (
  answer="$(prompt | cut -c 1)"

  if [ "$answer" != y ] && [ "$answer" != Y ]
    then
      return 1
  fi
)

if [ "$(uname)" = Darwin ]
  then
    if [ ! -d "$(command xcode-select -p 2>/dev/null)" ]
      then
        printf "$(cat <<EOF
Downloading dotfiles requires the command line developer tools to be installed
and the path of the active developer directory to be set.
EOF)" >&2

        if command xcode-select --install >/dev/null 2>&1
          then
            printf "$(cat <<EOF
 Please choose an
option in the dialog that should have opened to install the command line
developer tools and come back here to continue when finished or try to download
again later.
EOF)" >&2

            printf '

Continue download? (y/n [n]) '

            if ! confirm
              then
                echo 'Download cancelled.' >&2

                exit 1
            fi

            if [ ! -d "$(command xcode-select -p 2>/dev/null)" ]
              then
                echo "$(cat <<EOF
Unable to find an active developer directory. Maybe the command line developer
tools installation was not yet finished or not successful. Try again.
EOF)" >&2

                exit 1
            fi
        else
          echo "$(cat <<EOF
 Please use
\`xcode-select -s <path>\` to set a path (or see \`man xcode-select\`) and then
try to download again.
EOF)" >&2

          exit 1
        fi
    fi
elif ! git --version >/dev/null 2>&1
  then
    # TODO: Prompt whether the user wants to install Git
    # See: https://git-scm.com/book/en/v2/Getting-Started-Installing-Git
    # And: https://git-scm.com/download/linux

    echo "$(cat <<EOF
Downloading dotfiles requires Git to be installed. An automated installation at
this point is planned for the future but has to be done manually for this time.
Please see https://git-scm.com/download/linux and try downloading again later.
EOF)" >&2

    exit 1
fi

directory="$(pwd)"

if [ ! -d "$directory" ]
  then
    directory="${HOME:=}"
fi

echo "$(cat <<EOF
By default, dotfiles will be downloaded and placed as a subdirectory into the
current working directory, which is in this case:

$directory
EOF)"

printf '
Choose another directory? (y/n [n]) '

if confirm
  then
    # TODO: Prompt where the user wants to download dotfiles

    echo; echo "$(cat <<EOF
Choosing another directory is currently unavailable but planned for the future.
Please change your working directory manually and then start downloading again.
EOF)" >&2

    exit 1
fi

subdirectory='.dotfiles'

echo "$(cat <<EOF

The dotfiles subdirectory will be named "$subdirectory" by default, which will
result in:

$directory/$subdirectory
EOF)"

printf '
Rename subdirectory? (y/n [n]) '

if confirm
  then
    # TODO: Prompt how the user wants to name the subdirectory

    echo; echo "$(cat <<EOF
Renaming the subdirectory is currently unavailable but planned for the future.
Alternatively, you could clone the dotfiles repository manually into your
desired directory and then execute `bin/deploy` in it.
EOF)" >&2

    exit 1
fi

directory="$directory/$subdirectory"

unset subdirectory

echo

git clone https://github.com/ChristianGrete/dotfiles.git "$directory"

if [ $? -eq 0 ]
  then
    "$directory/bin/install"
fi
